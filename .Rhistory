averages_states2_s01 <- glm_hmm2_s01$model_matrix_with_session %>%
mutate(trial = row_number()) %>%
left_join(posterior_wins2_s01, by = c("session", "trial")) %>%
mutate(dot_diff_bin = cut_interval(dot_diff, 10)) |>
group_by(dot_diff_bin, state) %>%
summarise(dot_diff = mean(dot_diff),
prob = mean(response),
n = n(),
.groups = "keep")
glm_hmm2_s01$recovered_weights
xx
ggplot() +
geom_point(data = averages_states2_s01,
aes(dot_diff, prob, color = state)) +
geom_line(data = psycho2_s01,
aes(x = dot_diff, y = prop, color = state))
glm_hmm2_seeds_s01 <- s01_design_matrix %>%
glm_hmm_r(.num_states = 2, .seeds = 1:100, .all_seeds = TRUE)
glm_hmm2_seeds_s01
glm_hmm2_seeds_s01 %>%
arrange(log_lik) %>%
mutate(ordered_seed = row_number()) %>%
ggplot(aes(ordered_seed, log_lik)) +
geom_line() +
geom_point()
glm_hmm2_s01 <- glm_hmm2_seeds_s01 |>
filter(log_lik == max(log_lik)) |>
pluck("fit") %>%
pluck(1)
glm_hmm2_s01
psycho2_s01 <- glm_hmm2_s01$recovered_weights |>
group_by(state) |>
reframe(create_psychometric(dot_diff, value))
posterior_wins2_s01 <- glm_hmm2_s01$posterior_probs |>
group_by(trial) %>%
filter(p == max(p)) %>%
select(-p)
posterior_wins2_s01 |> ungroup() |> count(state)
averages_states2_s01 <- glm_hmm2_s01$model_matrix_with_session %>%
mutate(trial = row_number()) %>%
left_join(posterior_wins2_s01, by = c("session", "trial")) %>%
mutate(dot_diff_bin = cut_interval(dot_diff, 10)) |>
group_by(dot_diff_bin, state) %>%
summarise(dot_diff = mean(dot_diff),
prob = mean(response),
n = n(),
.groups = "keep")
ggplot() +
geom_point(data = averages_states2_s01,
aes(dot_diff, prob, color = state)) +
geom_line(data = psycho2_s01,
aes(x = dot_diff, y = prop, color = state))
glm_hmm2_seeds_s01 <- s01_design_matrix %>%
glm_hmm_r(.num_states = 2, .seeds = 1:40, .all_seeds = TRUE)
glm_hmm2_seeds_s01
glm_hmm2_seeds_s01 %>%
arrange(log_lik) %>%
mutate(ordered_seed = row_number()) %>%
ggplot(aes(ordered_seed, log_lik)) +
geom_line() +
geom_point()
glm_hmm2_s01 <- glm_hmm2_seeds_s01 |>
filter(log_lik == max(log_lik)) |>
pluck("fit") %>%
pluck(1)
glm_hmm2_s01
glm_hmm2_s01 <- glm_hmm2_seeds_s01 |>
filter(log_lik == max(log_lik)) |>
pluck("fit") %>%
pluck(1)
glm_hmm2_s01
psycho2_s01 <- glm_hmm2_s01$recovered_weights |>
group_by(state) |>
reframe(create_psychometric(dot_diff, value))
posterior_wins2_s01 <- glm_hmm2_s01$posterior_probs |>
group_by(trial) %>%
filter(p == max(p)) %>%
select(-p)
posterior_wins2_s01 |> ungroup() |> count(state)
averages_states2_s01 <- glm_hmm2_s01$model_matrix_with_session %>%
mutate(trial = row_number()) %>%
left_join(posterior_wins2_s01, by = c("session", "trial")) %>%
mutate(dot_diff_bin = cut_interval(dot_diff, 10)) |>
group_by(dot_diff_bin, state) %>%
summarise(dot_diff = mean(dot_diff),
prob = mean(response),
n = n(),
.groups = "keep")
ggplot() +
geom_point(data = averages_states2_s01,
aes(dot_diff, prob, color = state)) +
geom_line(data = psycho2_s01,
aes(x = dot_diff, y = prop, color = state))
s01_2_trials_plot <- ggplot() +
geom_line(data = glm_hmm2_s01$posterior_probs,
aes(x = trial, y = p, color = state)) +
geom_point(data = data_trials_s01,
aes(x = trial, y = response), shape = "|")
s01_2_trials_plot
library(reticulate)
use_condaenv("glmhmm")
source_python("python/glm_hmm.py")
reticulate::repl_python()
library(tidyverse)
library(broom)
library(dplyr)
library(R.matlab)
library(cowplot)
list.files("R", full.names = TRUE) |>
walk(source)
data_trials <- read_csv("data/data_Rouault_2018_Expt1.csv", show_col_types = FALSE)
data_trials <- rename(data_trials, subject = Subj_idx, stimulus = Stimulus, response = Response, confidence = Confidence, RT = RT_dec, dot_diff = DotDiff, correct = Accuracy)
data_trials <- data_trials |>
group_by(subject) |>
mutate(trial = row_number()) |>
mutate(stimulus = if_else(stimulus == 0, -1, 1),
dot_diff = stimulus * dot_diff)
data_trials
data_trials |>
group_by(subject) |>
count(stimulus) |>
group_by(subject) |>
mutate(prop = n / sum(n)) |>
select(-n) |>
pivot_wider(names_from = stimulus, values_from = prop)
data_trials_s01 <- data_trials %>%
filter(subject == 1)
s01_design_matrix <- data_trials_s01 %>%
mutate(session = 1,
intercept = 1,
dot_diff = dot_diff) %>%
ungroup() %>%
select(session, response, intercept, dot_diff)
s01_design_matrix
s02_design_matrix <- data_trials %>%
filter(subject == 2) %>%
mutate(session = 1,
intercept = 1,
dot_diff = dot_diff) %>%
ungroup() %>%
select(session, response, intercept, dot_diff)
s02_design_matrix
glm_hmm2_seeds_s01 <- s01_design_matrix %>%
glm_hmm_r(.num_states = 2, .seeds = 1:40, .all_seeds = TRUE)
glm_hmm2_seeds_s01
glm_hmm2_seeds_s01 %>%
arrange(log_lik) %>%
mutate(ordered_seed = row_number()) %>%
ggplot(aes(ordered_seed, log_lik)) +
geom_line() +
geom_point()
glm_hmm2_s01 <- glm_hmm2_seeds_s01 |>
filter(log_lik == max(log_lik)) |>
pluck("fit") %>%
pluck(1)
glm_hmm2_s01
psycho2_s01 <- glm_hmm2_s01$recovered_weights |>
group_by(state) |>
reframe(create_psychometric(dot_diff, value))
posterior_wins2_s01 <- glm_hmm2_s01$posterior_probs |>
group_by(trial) %>%
filter(p == max(p)) %>%
select(-p)
posterior_wins2_s01 |> ungroup() |> count(state)
averages_states2_s01 <- glm_hmm2_s01$model_matrix_with_session %>%
mutate(trial = row_number()) %>%
left_join(posterior_wins2_s01, by = c("session", "trial")) %>%
mutate(dot_diff_bin = cut_interval(dot_diff, 10)) |>
group_by(dot_diff_bin, state) %>%
summarise(dot_diff = mean(dot_diff),
prob = mean(response),
n = n(),
.groups = "keep")
ggplot() +
geom_point(data = averages_states2_s01,
aes(dot_diff, prob, color = state)) +
geom_line(data = psycho2_s01,
aes(x = dot_diff, y = prop, color = state))
s01_2_trials_plot <- ggplot() +
geom_line(data = glm_hmm2_s01$posterior_probs,
aes(x = trial, y = p, color = state)) +
geom_point(data = data_trials_s01,
aes(x = trial, y = response), shape = "|")
s01_2_trials_plot
posterior_wins2_s01 |>
ungroup() |>
count(state)
plotting_psycho_one_participant(glm_hmm2_s01)
plot_grid(plotting_psycho_one_participant(glm_hmm2_s01),
plotting_trials_one_participant(glm_hmm2_s01),
rel_widths = c(.5, .5),
labels = "AUTO")
design_matrix_all <- data_trials %>%
mutate(session = 1,
intercept = 1,
dot_diff = dot_diff) %>%
ungroup() %>%
select(subject, session, response, intercept, dot_diff) |>
filter(subject <= 10) # solo 10 participantes
design_matrix_all
glm_hmm2_all_seeds <- design_matrix_all |>
group_by(subject) |>
nest() %>%
rowwise() %>%
mutate(fit = list(glm_hmm_r(data,
.num_states = 2, .seeds = 1:20,
.all_seeds = TRUE)))
glm_hmm2_all <- glm_hmm2_all_seeds %>%
mutate(fit = list(glm_hmm_extract_best(fit)))
#save(glm_hmm_2_all, file = "RData/glm_hmm_all_seeds_2.RData")
#load("RData/glm_hmm_all_seeds_2.RData")
glm_hmm2_all |>
select(-data) |>
unnest_wider(fit) |>
select(subject, recovered_weights) |>
unnest(recovered_weights)
liks_glm_hmm2_all <- glm_hmm2_all %>%
unnest_wider(fit) %>%
mutate(n = map(data, count)) %>%
unnest(n) %>%
select(subject, log_lik, n_par, n) %>%
mutate(model = "int-slo 2")
plots_2_all <- glm_hmm2_all %>%
rowwise() %>%
mutate(p = list(plotting_one_participant(fit, subject)))
plots_2_all_grid <- plot_grid(plotlist = plots_2_all$p, ncol = 2)
file_name <- paste0("figures/", deparse(substitute(.glm_hmm)), ".pdf")
ggsave("figures/plots_2_grid.pdf",
plots_2_all_grid, width = 10, height = 10)
glm_hmm3_s01 <- s01_design_matrix %>%
glm_hmm_r(.num_states = 3)
glm_hmm3_s01
psycho_3_s01 <- glm_hmm3_s01$recovered_weights |>
group_by(state) |>
reframe(create_psychometric(dot_diff, value))
psycho_3_s01 |> ggplot(aes(x = dot_diff, y = prop, color = state)) +
geom_line()
posterior_wins3_s01 <- glm_hmm3_s01$posterior_probs |>
group_by(trial) %>%
filter(p == max(p)) %>%
select(-p)
posterior_wins3_s01
posterior_wins3_s01 |>
ungroup() |>
count(state)
s01_trials <- data_trials %>%
filter(subject == 1) %>%
mutate(session = 1,
intercept = 1,
dot_diff = dot_diff) %>%
ungroup() %>%
select(session, response, intercept, dot_diff, trial)
s01_3_trials_plot <- ggplot() +
geom_line(data = glm_hmm3_s01$posterior_probs,
aes(x = trial, y = p, color = state)) +
geom_point(data = s01_trials, aes(x = trial, y = response), shape = "|")
s01_3_trials_plot
glm_hmm3_seeds_s01 <- s01_design_matrix %>%
glm_hmm_r(.num_states = 3, .seeds = 1:20, .all_seeds = TRUE)
glm_hmm3_seeds_s01
glm_hmm3_seeds_s01 %>%
arrange(log_lik) %>%
mutate(ordered_seed = row_number()) %>%
ggplot(aes(ordered_seed, log_lik)) +
geom_line() +
geom_point()
glm_hmm3_s01_best <- glm_hmm3_seeds_s01 |>
filter(log_lik == max(log_lik)) |>
pluck("fit") %>%
pluck(1)
glm_hmm3_s01_best
psycho_3_s01_best <- glm_hmm3_s01_best$recovered_weights |>
group_by(state) |>
reframe(create_psychometric(dot_diff, value))
ggplot() +
geom_line(data = psycho_3_s01_best,
aes(x = dot_diff, y = prop, color = state))
ggplot() +
geom_line(data = psycho_3_s01_best,
aes(x = dot_diff, y = prop, color = state))
averages_states3_S01 <- glm_hmm3_s01_best$model_matrix_with_session %>%
mutate(trial = row_number()) %>%
left_join(posterior_wins3_s01, by = c("session", "trial")) %>%
mutate(dot_diff_bin = cut_interval(dot_diff, 10)) |>
group_by(dot_diff_bin, state) %>%
summarise(dot_diff = mean(dot_diff), prob = mean(response), n = n(), .groups = "keep")
averages_states3_S01 |>
ggplot(aes(dot_diff, prob, color = state)) +
geom_point() +
geom_line(data = psycho_3_s01_best,
aes(x = dot_diff, y = prop, color = state, groups = state))
averages_states3_S01
averages_states3_S01
averages_states3_S01 |>
filter(state == "S2")
averages_states3_S01 |>
ggplot(aes(dot_diff, prob, color = state)) +
geom_point() +
geom_line(data = psycho_3_s01_best,
aes(x = dot_diff, y = prop, color = state, groups = state))
averages_states3_S01 |>
filter(state == "S2")
glm_hmm3_all_seeds <- design_matrix_all |>
group_by(subject) |>
nest() %>%
rowwise() %>%
mutate(fit = list(glm_hmm_r(data,
.num_states = 3)))#, .seeds = 1:20,
#.all_seeds = TRUE)))
glm_hmm3_all <- glm_hmm3_all_seeds #%>%
#mutate(fit = list(glm_hmm_extract_best(fit)))
glm_hmm3_all |>
select(-data) |>
unnest_wider(fit) |>
select(subject, recovered_weights) |>
unnest(recovered_weights)
liks_glm_hmm3_all <- glm_hmm3_all %>%
unnest_wider(fit) %>%
mutate(n = map(data, count)) %>%
unnest(n) %>%
select(subject, log_lik, n_par, n) %>%
mutate(model = "int-slo 2")
plots_3_all <- glm_hmm3_all %>%
rowwise() %>%
mutate(p = list(plotting_one_participant(fit, subject)))
plots_3_all_grid <- plot_grid(plotlist = plots_3_all$p, ncol = 2)
file_name <- paste0("figures/", deparse(substitute(.glm_hmm)), ".pdf")
ggsave("figures/plots_3_grid.pdf",
plots_3_all_grid, width = 20, height = 20)
ggsave("figures/plots_3_grid.pdf",
plots_3_all_grid, width = 10, height = 10)
glm_hmm3_seeds_s01 <- s01_design_matrix %>%
glm_hmm_r(.num_states = 3, .seeds = 1:20, .all_seeds = TRUE)
glm_hmm3_seeds_s01
glm_hmm3_seeds_s01 %>%
arrange(log_lik) %>%
mutate(ordered_seed = row_number()) %>%
ggplot(aes(ordered_seed, log_lik)) +
geom_line() +
geom_point()
glm_hmm3_s01_best <- glm_hmm3_seeds_s01 |>
filter(log_lik == max(log_lik)) |>
pluck("fit") %>%
pluck(1)
glm_hmm3_s01_best
psycho_3_s01_best <- glm_hmm3_s01_best$recovered_weights |>
group_by(state) |>
reframe(create_psychometric(dot_diff, value))
averages_states3_S01 <- glm_hmm3_s01_best$model_matrix_with_session %>%
mutate(trial = row_number()) %>%
left_join(posterior_wins3_s01, by = c("session", "trial")) %>%
mutate(dot_diff_bin = cut_interval(dot_diff, 10)) |>
group_by(dot_diff_bin, state) %>%
summarise(dot_diff = mean(dot_diff), prob = mean(response), n = n(), .groups = "keep")
averages_states3_S01 |>
ggplot(aes(dot_diff, prob, color = state)) +
geom_point() +
geom_line(data = psycho_3_s01_best,
aes(x = dot_diff, y = prop, color = state, groups = state))
averages_states3_S01 |>
ggplot(aes(dot_diff, prob, color = state)) +
geom_point() +
geom_line(data = psycho_3_s01_best,
aes(x = dot_diff, y = prop, groups = state))
averages_states3_S01 |>
ggplot(aes(dot_diff, prob, color = state)) +
geom_point() +
geom_line(data = psycho_3_s01_best,
aes(x = dot_diff, y = prop))
liks_glm_hmm3_all <- glm_hmm3_all %>%
unnest_wider(fit) %>%
mutate(n = map(data, count)) %>%
unnest(n) %>%
select(subject, log_lik, n_par, n) %>%
mutate(model = "int-slo 2")
liks_glm_hmm3_all
glm_hmm4_all_seeds <- design_matrix_all |>
group_by(subject) |>
nest() %>%
rowwise() %>%
mutate(fit = list(glm_hmm_r(data,
.num_states = 4)))#, .seeds = 1:20,
#.all_seeds = TRUE)))
glm_hmm4_all <- glm_hmm4_all_seeds #%>%
#mutate(fit = list(glm_hmm_extract_best(fit)))
glm_hmm4_all_seeds <- design_matrix_all |>
group_by(subject) |>
nest() %>%
rowwise() %>%
mutate(fit = list(glm_hmm_r(data,
.num_states = 4, .seeds = 1:20.
.all_seeds = TRUE)))
glm_hmm4_all_seeds <- design_matrix_all |>
group_by(subject) |>
nest() %>%
rowwise() %>%
mutate(fit = list(glm_hmm_r(data,
.num_states = 4, .seeds = 1:20,
.all_seeds = TRUE)))
glm_hmm4_all <- glm_hmm4_all_seeds #%>%
#mutate(fit = list(glm_hmm_extract_best(fit)))
glm_hmm4_all |>
select(-data) |>
unnest_wider(fit) |>
select(subject, recovered_weights) |>
unnest(recovered_weights)
liks_glm_hmm4_all <- glm_hmm4_all %>%
unnest_wider(fit) %>%
mutate(n = map(data, count)) %>%
unnest(n) %>%
select(subject, log_lik, n_par, n) %>%
mutate(model = "int-slo 4")
liks_glm_hmm4_all
glm_hmm4_all
glm_hmm4_all %>%
unnest_wider(fit) %>%
mutate(n = map(data, count)) %>%
unnest(n) %>%
select(subject, log_lik, n_par, n)
glm_hmm4_all %>%
unnest_wider(fit) %>%
mutate(n = map(data, count))
glm_hmm4_all <- glm_hmm4_all_seeds %>%
mutate(fit = list(glm_hmm_extract_best(fit)))
glm_hmm4_all |>
select(-data) |>
unnest_wider(fit) |>
select(subject, recovered_weights) |>
unnest(recovered_weights)
liks_glm_hmm4_all <- glm_hmm4_all %>%
unnest_wider(fit) %>%
mutate(n = map(data, count)) %>%
unnest(n) %>%
select(subject, log_lik, n_par, n) %>%
mutate(model = "int-slo 4")
liks_glm_hmm4_all
liks_glm_hmm3_all <- glm_hmm3_all %>%
unnest_wider(fit) %>%
mutate(n = map(data, count)) %>%
unnest(n) %>%
select(subject, log_lik, n_par, n) %>%
mutate(model = "int-slo 3")
liks_glm_hmm4_all
glm_hmm2_s01_best_AIC <- -2 * glm_hmm2_s01$log_lik + 2 * glm_hmm2_s01$n_par
glm_hmm3_s01_best_AIC <- -2 * glm_hmm3_s01_best$log_lik + 2 * glm_hmm3_s01_best$n_par
glm_hmm2_s01_best_AIC
glm_hmm3_s01_best_AIC
glm_hmm2_s01_best_AIC
glm_hmm2_s01
glm_hmm2_s01_best_AIC <- -2 * glm_hmm2_s01$log_lik + 2 * glm_hmm2_s01$n_par
glm_hmm3_s01_best_AIC <- -2 * glm_hmm3_s01_best$log_lik + 2 * glm_hmm3_s01_best$n_par
glm_hmm2_s01_best_AIC
glm_hmm3_s01_best_AIC
glm_hmm2_all_AIC <- -2 * liks_glm_hmm2_all$log_lik + 2 * liks_glm_hmm2_all$n_par
glm_hmm3_all_AIC <- -2 * liks_glm_hmm3_all$log_lik + 2 * liks_glm_hmm2_all$n_par
glm_hmm4_all_AIC <- -2 * liks_glm_hmm4_all$log_lik + 2 * liks_glm_hmm4_all$n_par
mean(glm_hmm2_all_AIC)
mean(glm_hmm3_all_AIC)
mean(glm_hmm4_all_AIC)
liks_glm_hmm2_all
glm_hmm2_all_AIC
liks_glm_hmm2_all
liks_glm_hmm <- liks_glm_hmm2_all |>
bind_rows(liks_glm_hmm3_all)
liks_glm_hmm <- liks_glm_hmm2_all |>
bind_rows(liks_glm_hmm3_all) |>
bind_rows(liks_glm_hmm4_all)
liks_glm_hmm
liks_glm_hmm <- liks_glm_hmm2_all |>
bind_rows(liks_glm_hmm3_all) |>
bind_rows(liks_glm_hmm4_all) |>
mutate(aic = -2 * log_lik + 2 *n_par)
liks_glm_hmm <- liks_glm_hmm2_all |>
bind_rows(liks_glm_hmm3_all) |>
bind_rows(liks_glm_hmm4_all) |>
mutate(aic = -2 * log_lik + 2 *n_par)
liks_glm_hmm
liks_glm_hmm2_all |>
bind_rows(liks_glm_hmm3_all) |>
bind_rows(liks_glm_hmm4_all)
liks_glm_hmm <- liks_glm_hmm2_all |>
bind_rows(liks_glm_hmm3_all) |>
bind_rows(liks_glm_hmm4_all) |>
mutate(aic = -2 * log_lik + 2 *n_par)
liks_glm_hmm
liks_glm_hmm <- liks_glm_hmm2_all |>
bind_rows(liks_glm_hmm3_all) |>
bind_rows(liks_glm_hmm4_all) |>
mutate(aic = -2 * log_lik + 2 *n_par)
liks_glm_hmm_best <- liks_glm_hmm |>
group_by(subject) |>
filter(aic = min(aic))
liks_glm_hmm_best <- liks_glm_hmm |>
group_by(subject) |>
filter(aic == min(aic))
liks_glm_hmm_best
liks_glm_hmm
liks_glm_hmm |> filter(subject == 1)
liks_glm_hmm |> filter(subject == 1)
liks_glm_hmm |> filter(subject == 1)
liks_glm_hmm_best <- liks_glm_hmm |>
group_by(subject) |>
filter(aic == min(aic))
liks_glm_hmm_best
liks_glm_hmm_best |> count(model)
liks_glm_hmm_best |>
ungroup() |>
count(model)
library(reticulate)
use_condaenv("glmhmm")
source_python("python/glm_hmm.py")
reticulate::repl_python()
